@model FinalProjectApplication.Models.Event

@{
    ViewBag.Title = "CreateEvent";
}

<br />
<h2>Create Event</h2>
<hr />


@if (ViewBag.ErrorMessage != null)
{
  
    <div class="alert alert-danger alert-dismissible">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong>Danger!</strong>@ViewBag.ErrorMessage
    </div>

}

@if (ViewBag.Message != null)
{
    <div class="alert overlay">
        <strong>Success!</strong><br /><br /><br />@ViewBag.Message
    </div>
}
<style>


    .overlay {
        position: fixed;
        width: 35%;
        height: 18%;
        border-color: #2E4A62;
        top: 0;
        right: 0;
        bottom: 0;
        z-index: 2;
        text-align: center;
        background-color: #343148;
        color: white;
    }
</style>
<script>
        window.setTimeout(function () {
            $(".alert").fadeTo(0, 0).slideUp(500, function () {
                $(this).remove();
            });
        }, 5000);
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



        <input type="hidden" name="UserId" value="" />


        <div class="form-group">
            @Html.LabelFor(model => model.EventTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventTitle, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.EventTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EventDescription, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.EventDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FromTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FromTime, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.FromTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ToTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ToTime, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.ToTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>



        <input type="text" name="EventCreateTime" hidden value="@DateTime.Now" />




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
